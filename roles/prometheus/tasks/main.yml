---
- name: Register Domain
  shell: "cat /var/plexguide/server.domain"
  register: domain
  ignore_errors: True

- name: Create prometheus directory needed
  file:
    path: "{{item}}"
    state: directory
    owner: 1000
    group: 1000
    mode: 0755
    recurse: yes
  with_items:
    - /opt/appdata/prometheus/config
    - /opt/appdata/prometheus/data

- name: Create grafana directory needed
  file:
    path: "{{item}}"
    state: directory
    owner: 472
    group: 472
    mode: 0755
    recurse: yes
  with_items:
    - /opt/appdata/grafana/data
    - /opt/appdata/grafana/datasources
    - /opt/appdata/grafana/dashboards

- name: Installing grafana datasource
  template:
    src: datasource.yaml
    dest: /opt/appdata/grafana/datasources
    force: yes
    owner: 472
    group: 472
    mode: 0755

- name: Adds prometheus.yml config
  copy:
    src: prometheus.yml
    dest: /opt/appdata/prometheus/config/
    owner: 1000
    group: 1000
    mode: 0755

- name: Adds docker container dashboard
  copy:
    src: docker-containers.json
    dest: /opt/appdata/grafana/data/dashboards/
    owner: 472
    group: 472
    mode: 0755

- name: Adds docker host dashboard
  copy:
    src: docker-host.json
    dest: /opt/appdata/grafana/data/dashboards/
    owner: 472
    group: 472
    mode: 0755


- name: Setting up grafana dashboard provisioning
  template:
    src: dashboards.yaml
    dest: /opt/appdata/grafana/dashboards
    force: yes
    owner: 472
    group: 472
    mode: 0755

- name: Building monitoring
  docker_service:
     project_name: monitoring
     definition:
       networks:
         net:
           driver: bridge
       version: '2'
       services:
         prometheus:
           image: {{ vars['prometheus']['image'] }}:\
                  {{ vars['prometheus']['version'] }}
           command:
             - --config.file=/etc/prometheus/prometheus.yml
             - --storage.tsdb.path=/prometheus
             - --web.console.libraries=/etc/prometheus/console_libraries
             - --web.console.templates=/etc/prometheus/consoles
             - --web.enable-lifecycle
           volumes:
             - /opt/appdata/prometheus/config:/etc/prometheus/
             - /opt/appdata/prometheus/data:/prometheus
           restart: unless-stopped
           networks:
             - net 
           labels:
             org.label-schema.group: "monitoring" 
           user: 1000:1000
         nodeexporter:
           image: {{ vars['node-exporter']['image'] }}:\
                  {{ vars['node-exporter']['version'] }}
           user: root
           volumes:
             - /:/rootfs:ro
           privileged: true
           command:
             - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
           restart: unless-stopped
           networks:
             - net
           labels:
             org.label-schema.group: "monitoring"
         cadvisor:
           image: {{ vars['cadvisor']['image'] }}:\
                  {{ vars['cadvisor']['version'] }}
           volumes:
             - /:/rootfs:ro
             - /var/run:/var/run:ro
             - /sys:/sys:ro
             - /var/lib/docker/:/var/lib/docker:ro
             - /dev/disk/:/dev/disk:ro
           restart: unless-stopped
           networks:
             - net
           labels:
             org.label-schema.group: "monitoring"
         grafana:
           image: {{ vars['grafana']['image'] }}:\
                  {{ vars['grafana']['version'] }}
           depends_on:
             - prometheus
           volumes:
             - /opt/appdata/grafana/data:/var/lib/grafana
             - /opt/appdata/grafana/datasources/:/etc/grafana/provisioning/datasources/
             - /opt/appdata/grafana/dashboards/:/etc/grafana/provisioning/dashboards/
           environment:
             - GF_SERVER_ROOT_URL=https://grafana.{{domain.stdout}}
             - GF_USERS_ALLOW_SIGN_UP=false
           restart: unless-stopped
           networks:
             - net
           labels:
             org.label-schema.group: "monitoring"
             traefik.enable: "true"
             traefik.frontend.redirect.entryPoint: "https"
             traefik.frontend.rule: "Host:grafana.{{domain.stdout}},{{tldset}}"
             traefik.port: "3000"

- include_role:
    name: traefik

- name: Add grafata to plexguide network
  docker_network:
    name: monitoring_net
    appends: yes
    connected:
      - traefik
